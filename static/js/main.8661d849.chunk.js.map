{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onSearchChange","event","setState","target","value","fetch","then","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OAEI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,aACpD,gCACG,6BAAKJ,IACL,4BAAIC,WCWJI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEDA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAS,cAAC,EAAD,CAELV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCGFC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCACjBW,KAAK,SAASC,YAAY,gBAC1BC,SAAYH,OCGLI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAWC,OAAQ,SAA3C,SACKH,EAAMI,YCiBJC,E,kDAnBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKJ,MAAM,CAAEC,UAAU,M,oBAI3B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKV,MAAMI,a,GAhBCO,aCkDZC,G,wDA5CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAErB,YAAaoB,EAAME,OAAOC,SAf1C,EAAKX,MAAQ,CACTjB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAE1B,OAAQiC,S,oBAS3C,WAAU,IAAD,EAC0BZ,KAAKJ,MAA5BjB,EADH,EACGA,OAAQK,EADX,EACWA,YACV6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASjC,EAAYgC,kBAE7D,OAAQrC,EAAOuC,OAGP,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKG,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAE,EAAF,CAAWxB,OAAQkC,WAPtB,6C,GA3BSZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAGAC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.8661d849.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Card = ({ id, name, email }) => {\n    return (\n        \n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"> \n            <img src={`https://robohash.org/${id}?200x200`} alt=\"janeface\" />\n            <div>\n               <h2>{name}</h2> \n               <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n       robots.map((user, i) => {\n        return ( <Card \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email}/>\n            )\n    })\n}\n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2\">\n        <input className=\"pa2 ba b--green bg-lightest-blue\"\n        type=\"search\" placeholder=\"search robots\" \n        onChange = {searchChange}\n        />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll',  height: '700px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(error, info) {\n        this.state({ hasError: true })\n    }\n\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good!</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(Response=> Response.json())\n        .then(users => this.setState({ robots: users}))\n        }\n        \n    \n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value});\n    }\n\n    render() {\n        const { robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n    return !robots.length ?\n         <h1>Loading</h1> :\n         (\n            <div className=\"tc\">\n            <h1 className=\"f1\">RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n            <ErrorBoundry>\n            < CardList robots={filteredRobots}/> \n            </ErrorBoundry>\n            </Scroll>           \n            </div>\n        );\n    }\n    \n    };\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}